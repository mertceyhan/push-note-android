plugins {
    id "com.android.application"
    id "kotlin-android"
    id "kotlin-kapt"
    id "dagger.hilt.android.plugin"
}

def keystorePropertiesFile = rootProject.file("release/keystore.properties")
def isKeystorePropertiesFileExists = keystorePropertiesFile.exists()
def keystoreProperties = new Properties()

if (isKeystorePropertiesFileExists) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    compileSdk 31

    defaultConfig {
        applicationId "com.penguenlabs.pushnote"
        minSdk 21
        targetSdk 31
        versionCode 6
        versionName "1.2.1"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    signingConfigs {
        debug {
            keyAlias "androiddebugkey"
            keyPassword "android"
            storeFile rootProject.file("release/app-debug")
            storePassword "android"
        }

        release {
            if (isKeystorePropertiesFileExists) {
                keyAlias keystoreProperties['keyAlias']
                keyPassword keystoreProperties['keyPassword']
                storeFile file(keystoreProperties['storeFile'])
                storePassword keystoreProperties['storePassword']
            }
        }
    }

    buildTypes {
        debug {
            applicationIdSuffix ".debug"
            minifyEnabled false
            debuggable true
        }

        release {
            if (isKeystorePropertiesFileExists) {
                signingConfig signingConfigs.release
            } else {
                signingConfig signingConfigs.debug
            }
            shrinkResources true
            minifyEnabled true
            debuggable false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
        useIR = true
    }

    buildFeatures {
        compose true
    }

    composeOptions {
        kotlinCompilerExtensionVersion compose_version
        kotlinCompilerVersion '1.6.10'
    }

    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.8.0'
    implementation 'androidx.appcompat:appcompat:1.4.2'
    implementation 'com.google.android.material:material:1.6.1'
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.material:material:$compose_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.4.1'
    implementation 'androidx.activity:activity-compose:1.4.0'
    implementation("com.google.dagger:hilt-android:2.42")
    implementation 'androidx.lifecycle:lifecycle-viewmodel-compose:2.4.1'
    implementation("androidx.navigation:navigation-compose:2.5.0-rc02")
    implementation("androidx.hilt:hilt-navigation-compose:1.0.0")
    implementation 'com.google.firebase:firebase-analytics-ktx'
    implementation("androidx.room:room-runtime:2.4.2")
    implementation("androidx.room:room-ktx:2.4.2")
    implementation platform('com.google.firebase:firebase-bom:29.0.1')
    implementation "com.google.accompanist:accompanist-systemuicontroller:0.20.3"
    implementation "com.google.accompanist:accompanist-insets:0.22.0-rc"

    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"

    kapt("com.google.dagger:hilt-android-compiler:2.42")
    kapt("androidx.room:room-compiler:2.4.2")

    testImplementation 'junit:junit:4.13.2'

    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
}

if (file("google-services.json").exists()) {
    apply plugin: "com.google.gms.google-services"
}